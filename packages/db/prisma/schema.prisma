generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String      @id @default(uuid())
  email    String      @unique
  address  String
  name     String
}

model Website {
  id           String        @id @default(uuid())
  url          String
  userId       String
  websiteTicks WebsiteTick[]
  disabled     Boolean       @default(false)
  expiry       DateTime?
  payment      Payment[]
}

model Validator {
  id              String        @id @default(uuid())
  publicKey       String        
  location        String
  ip              String
  pendingPayouts  Int           @default(0)
  payouts         Payout[]
  validatorTicks  WebsiteTick[]
}

model WebsiteTick {
  id          String        @id @default(uuid())
  websiteId   String
  validatorId String
  status      WebsiteStatus
  latency     Float
  website     Website       @relation(fields: [websiteId], references: [id])
  validator   Validator     @relation(fields: [validatorId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
}

enum WebsiteStatus {
  UP
  DOWN
}

model Payout {
  id           Int              @id @default(autoincrement())
  validatorId  String
  validator    Validator        @relation(fields: [validatorId], references: [id])
  amount       Int
  signature    String
  status       TransactionStatus
}

model Payment {
  id        String   @id @default(uuid())
  userId    String
  websiteId String
  website   Website  @relation(fields: [websiteId], references: [id])
  amount    Int
  status    TransactionStatus
  signature String
  createdAt DateTime @default(now())
}


enum TransactionStatus {
  Processing
  Success
  Failure
}
